// public class DigitalPayment extends Payment {
//     private int accountNo;
//     private String userName;

//     public DigitalPayment(){

//     }
    
//     public DigitalPayment(int accountNo, String userName){
//         this.accountNo = accountNo;
//         this.userName = userName;
//     }

//     public String toString(){
//         return super.toString() +
//                 "\nAccount No: " + accountNo +
//                 "\nName: " + userName;
//     }
// }

//amount
//credit name
//credit number
//expiry date
//CVV


//validateCreditCardNum(luhn algorithmn mod 10)

//CHECKPAYMENTMADE(total paid correct onot)




/*
how to do report
after user input store it in an array (linkedlist , arraylist, hashmap)
maybe can do the particular user booking history (receipt can be report)?
*/


/*
i thin how to do store is what user input all store in array
then later compare array 
then can do the report d good luck you can do it!
*/


/*
may be can do abstract for payment
but abstract cannot have object plz rmb
*/

/*
try try to find where can put interface
Use for override the abstract methods that are not related
*/

/*
java.util.Date

Private Date date;

Date = new Date();
*/




Selangor 7 10
Selangor 10 11
Selangor 5 12
Selangor 8 10
PulauPinang 7 40
PulauPinang 10 41
PulauPinang 5 42
PulauPinang 8 40
JohorBahru 7 40
JohorBahru 10 41
JohorBahru 5 42
JohorBahru 8 40
NegeriSembilan 7 15
NegeriSembilan 10 16
NegeriSembilan 5 17
NegeriSembilan 8 15
Melaka 7 16
Melaka 10 17
Melaka 5 18
Melaka 8 16
Kelantan 7 42
Kelantan 10 43
Kelantan 5 44
Kelantan 8 42
Perak 7 39
Perak 10 40
Perak 5 41
Perak 8 39


/*
luhn algorithm
1) From the rightmost digit (the check digit), move left and double the value of every second digit; 
    if doubled number is greater than 9 (e.g., 7 Ã— 2 = 14), then subtract 9 from the product (e.g., 14: 14 - 9 = 5).
2) Sum of all the digits in the newly calculated number.
3) Multiply the sum by 9, the Luhn check digit is the rightmost digit of the result (e.g, the result modulo 10).
*/

//5531 0065 1773 4675



 int[] selangorPrice = {10,11,12,10};
    int[] pulauPngPrice = {40, 41, 42, 40};
    int[] johorPrice = {40, 41, 42, 40};
    int[] negeriSemPrice = {15, 16, 17, 18};
    int[] melakaPrice = {16, 17, 18, 16};
    int[] kelatanPrice = {42, 43, 44, 42};
    int[] perakPrice = {39, 40, 41, 39}; 
    int price = 0;



 public double price(){
        if(destination.equalsIgnoreCase("Selangor")){
            price = getPrice(selangorPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Pulau Pinang")){
            price = getPrice(pulauPngPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Johor Bahru")){
            price = getPrice(johorPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Negeri Sembilan")){
            price = getPrice(negeriSemPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Melaka")){
            price = getPrice(melakaPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Kelantan")){
            price = getPrice(kelatanPrice, onwardTime);
        }
        else if(destination.equalsIgnoreCase("Perak")){
            price = getPrice(perakPrice, onwardTime);  
        }
        
        return price;
    }

    public int getPrice(int[] priceArray, int onwardTime){

        if(onwardTime == 7){
            return priceArray[0];
        }
        else if(onwardTime == 10){
            return priceArray[1];
        }
        else if(onwardTime == 5){
            return priceArray[2];
        }
        else
            return priceArray[3];

    }
